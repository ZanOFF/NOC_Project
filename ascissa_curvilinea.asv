function [chi, k_out, x_new,y_new,s] = ascissa_curvilinea(x,y,Ss)
dy = diff(y);
dx = diff(x);
chi = atan2(dy,dx);                     % tangent angle of the trajectory wrt the global coordinates
chi = chi';
alpha(1) = 0;
    k_out(1) = 0;
    for i = 2:length(x)-1
        [b, ~] = cart2pol(x(i+1)-x(i),y(i+1)-y(i));
        [c, ~] = cart2pol(x(i+1)-x(i-1),y(i+1)-y(i-1));
        [~, a] = cart2pol(x(i)-x(i-1),y(i)-y(i-1));
        alpha(i) = b-c;
        k_out(i) = 2*sin(alpha(i))/a;           % curvature, computed using the geometrical properties of the trajectory
    end
for i=2:length(x)
    p1 = [x(i),y(i)];
    p2 = [x(i-1),y(i-1)];
    s(i) = norm(p2-p1);                 % the actual step size of the input trajectory
end
% now we must check 
x_new = zeros(1,length(x)*(round(max(s)/Ss)+1));
y_new = zeros(1,length(x)*(round(max(s)/Ss)+1));
x_new(1) = x(1);
y_new(1) = y(1);
i = 2;
k = i;
while i < length(x)
    if(s(i) > Ss)
        n = s(i);
        grad = [x(i),y(i)]-[x(i-1),y(i-1)];
        j = k;
        fix = n/round(n/Ss);
        for l =1:round(n/Ss)
            x_new(j) = x_new(j-1)+fix*grad(1)/norm(grad);
            y_new(j) = y_new(j-1)+fix*grad(2)/norm(grad);
            j=j+1;
        end
        k = j;
        x_new(k) = x(i);
        y_new(k) = y(i);
        i = i+1;
    else
        p2 = [x(i-1),y(i-1)];
        grad = [x(i),y(i)]-p2;
        while and(norm(grad) < Ss, i < length(x))
            i = i+1;
            grad = [x(i),y(i)]-p2;
        end
        x_new(k) = x(i);
        y_new(k) = y(i);
        k = k+1;
    end
end
x_new = x_new(1:k-1);
y_new = y_new(1:k-1);